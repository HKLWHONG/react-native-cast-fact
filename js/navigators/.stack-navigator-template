/**
 * @format
 * @flow strict-local
 */

import React from 'react';
import { StyleSheet } from 'react-native';

import { connect } from 'react-redux';

import { createStackNavigator } from '@react-navigation/stack';

import { BaseComponent } from '../components';
import { Header } from '../project-components';

import { TemplateView } from '../views';

import { Translation } from 'react-i18next';

const Stack = createStackNavigator();

class TemplateStackNavigator extends BaseComponent {
  constructor(props) {
    super(props);
  }

  componentDidMount() {
    super.componentDidMount();
  }

  componentWillUnmount() {
    super.componentWillUnmount();
  }

  render() {
    // const {props} = this;

    // const theme = props.theme || {};

    return (
      <Translation>
        {(t) => (
          <Stack.Navigator
            headerMode="screen"
            screenOptions={{
              header: ({ scene, previous, navigation }) => {
                return (
                  <Header
                    hiddenLeft={!previous}
                    navigation={navigation}
                    title={scene.descriptor.options.title}
                  />
                );
              },
              gestureEnabled: false,
            }}>
            <Stack.Screen
              name="Template"
              component={TemplateView}
              options={{
                title: 'TEMPLATE',
              }}
            />
          </Stack.Navigator>
        )}
      </Translation>
    );
  }
}

const styles = StyleSheet.create({});

function mapStateToProps(state) {
  return {};
}

function mapDispatchToProps(dispatch) {
  return {};
}

export default connect(
  mapStateToProps,
  mapDispatchToProps,
)(TemplateStackNavigator);
